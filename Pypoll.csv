import csv,
import os,
,
# Files to load and output (update with correct file paths),
"file_to_load = os.path.join(r""C:\Users\Owner\Documents\Ricia Daniels\Starter_Code 3\Starter_Code\PyPoll\Resources"",""election_data.csv"")  # Input file path",
"file_to_output = os.path.join(r""C:\Users\Owner\Documents\Ricia Daniels\Starter_Code 3\Starter_Code\PyPoll\analysis"", ""election_analysis.txt"")  # Output file path",
,
# Initialize variables to track the election data,
total_votes = 0  # Track the total number of votes cast,
,
# Define lists and dictionaries to track candidate names and vote counts,
savedRows = list(),
,
# Winning Candidate and Winning Count Tracker,
,
,
# Open the CSV file and process it,
,
with open(file_to_load) as election_data:,
    reader = csv.reader(election_data),
    header = next(reader)  # Skip header row,
    data = [row for row in reader],
,
candidates_dup = [row[2] for row in data ],
candidates = set( candidates_dup ),
# Loop through each row of the dataset and process it,
ballot_id_list = list(),
county_list = list(),
candidate_list = list(),
for row in data:,
      ballot_id_list.append( row[0]),
      county_list.append( row[1]),
      candidate_list.append( row[2]),
candidate_set = set(candidate_list),
"candidate_dict = dict.fromkeys(candidates, 0) ",
total_votes = len(data),
for candidate in candidate_list:,
      candidate_dict[candidate] = candidate_dict[candidate] + 1,
winner_votes = 0,
winner_candiate = str(''),
,
"with open(file_to_output, ""a"") as output_file:",
    for key in candidate_set:,
        votes = candidate_dict[key],
        if (votes > winner_votes):,
            winner_votes= votes,
            winner_candidate = key,
        perc = (votes / total_votes) * 100,
"        outstr =  '{0} has {1} votes ({2:2.0f} %)'.format(key, str(votes), perc)",
"        print( outstr, file=output_file)",
,
"    print('The total number of votes cast is ' + str(total_votes), file=output_file)",
    outstr = 'The winner of the election based on popular vote is ' + winner_candidate + ' with ' + str(winner_votes) + ' votes',
"    print(outstr, file=output_file)",
,
#,A complete list of candidates who received votes
#,The percentage of votes each candidate won
#,The total number of votes each candidate won
#,The winner of the election based on popular vote
,
#for row in data:,
        #print(row),
        # Print a loading indicator (for large datasets),
"        # print("". "", end="""")",
,
        # Increment the total vote count for each row,
        #total_votes = total_votes + 1,
,
        # Get the candidate's name from the row,
,
,
"        # If the candidate is not already in the candidate list, add them",
        ,
,
        # Add a vote to the candidate's count,
#print ('total number of votes '+ total_votes,
